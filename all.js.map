{"version":3,"sources":["app.js","modules/positionHelper.js","modules/randomizer.js"],"names":["debug","view","nodes","document","querySelector","init","stations","appInterface","positionHelper","PositionHelper","currentStation","station","el","createElement","html","name","className","innerHTML","setAttribute","id","appendChild","displayTrackInfo","stationName","artistName","trackName","stationNameContainer","innerText","artistNameContainer","trackNameContainer","activeStation","stationId","classList","remove","add","controller","stationsNodeList","querySelectorAll","i","length","addEventListener","playerController","playStation","parentElement","getAttribute","playerStateHandler","status","data","tuningController","pause","console","info","play","playerErrorHandler","player","prefferableQuality","previousTrackId","player_controller","YT","Player","events","getRandomStation","randomStation","Math","floor","random","stationsList","getStationById","getRandomTrackSrc","randomTrackId","tracks","src","artist","title","trackId","Error","loadVideoById","pleasePlay","self","playVideo","tuningNode","onYouTubeIframeAPIReady","tracklist","prototype","stationsNodes","stationsQuantity","degree","spanNode","Array","forEach","call","style","transform","backgroundImage","randomizer","nos","log"],"mappings":"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","file":"all.js","sourcesContent":["import randomizer from './modules/randomizer.js';\n\nrandomizer();\n\nvar debug = true;\n\nvar view = {\n    nodes: {\n        'stationNameContainer': document.querySelector('.station-name'),\n        'artistNameContainer': document.querySelector('.artist-name'),\n        'trackNameContainer': document.querySelector('.track-name'),\n    },\n    init: function (stations) {\n        var appInterface = document.querySelector('#interface');\n        var positionHelper = new PositionHelper();\n        var currentStation;\n\n        for (var station in stations) {\n            currentStation = {\n                el: document.createElement(\"div\"),\n                html: \"<span>\" + stations[station].name + \"</span>\",\n            };\n            currentStation.el.className = 'station';\n            currentStation.el.innerHTML = currentStation.html;\n            currentStation.el.setAttribute('data-id', stations[station].id);\n            appInterface.appendChild(currentStation.el);\n        }\n\n        positionHelper.init();\n    },\n    displayTrackInfo: function(stationName, artistName, trackName) {\n        this.nodes.stationNameContainer.innerText = stationName;\n        this.nodes.artistNameContainer.innerText = artistName;\n        this.nodes.trackNameContainer.innerText = trackName;\n    },\n    activeStation: function(stationId) {\n        if(document.querySelector('.station.active')) {\n            document.querySelector('.station.active').classList.remove('active');\n        }\n        document.querySelector('.station[data-id=\"' + stationId + '\"]').classList.add('active');\n    }\n};\n\nvar controller = {\n    init: function () {\n        var stationsNodeList = document.querySelectorAll('.station > span');\n\n        for(var i = 0; i < stationsNodeList.length; i++) {\n            stationsNodeList[i].addEventListener('click', function() {\n                playerController.playStation(this.parentElement.getAttribute('data-id'));\n            });\n        }\n    }\n}\n\n\nvar playerStateHandler = function(status) {\n    // console.info('Video status: ' + status.data);\n    switch(status.data) {\n        case 0:\n            playerController.playStation(playerController.currentStation)\n            break;\n        case 1:\n            tuningController.pause();\n            console.info('track is playing');\n            break;\n        case 2:\n            console.info('track stopped');\n            break;\n        case 3:\n            tuningController.play();\n            console.info('track is loading');\n            break;\n\n    }\n};\n\nvar playerErrorHandler = function() {\n    playerController.playStation(playerController.currentStation);\n};\n\nvar playerController = {\n    player: '',\n    prefferableQuality: 'small',\n    previousTrackId: 0,\n    currentStation: {},\n    init: function() {\n        var player_controller = this;\n        if(debug) {\n            tuningController.pause();\n        } else {\n            this.player = new YT.Player('player', {\n                events: {\n                    'onReady': function(){\n                        player_controller.currentStation = player_controller.getRandomStation();\n                        player_controller.playStation(player_controller.currentStation);\n                    },\n                    'onStateChange': playerStateHandler,\n                    'onError': playerErrorHandler,\n                },\n            });\n        }\n    },\n    getRandomStation: function() {\n        var randomStation = Math.floor(Math.random() * stationsList.length);\n        return stationsList[randomStation];\n    },\n    getStationById: function(stationId) {\n        return stationsList[stationId];\n    },\n    getRandomTrackSrc: function(station) {\n        var randomTrackId = Math.floor(Math.random() * station.tracks.length);\n\n        //Check to avoid track repeat and null src tracks\n        if (randomTrackId === this.previousTrackId) {\n            // console.warn('track is repeated');\n            this.getRandomTrackSrc(station);\n        } else if (station.tracks[randomTrackId].src.length < 10) {\n            // console.warn('track src is null');\n            this.getRandomTrackSrc(station)\n        } else {\n            this.previousTrackId = randomTrackId;\n            view.displayTrackInfo(station.name, station.tracks[randomTrackId].artist, station.tracks[randomTrackId].title);\n            return station.tracks[randomTrackId].src;\n        }\n    },\n    playStation: function(station) {\n        var stationId;\n        var trackId;\n\n        if (typeof(station) === 'object') {\n            this.currentStation = station;\n            stationId = station.id;\n        } else if (typeof(station) === 'string' || typeof(station) === 'number') {\n            this.currentStation = this.getStationById(station);\n            stationId = station;\n        } else {\n            throw new Error('Invalid type of station');\n        }\n        view.activeStation(stationId);\n        trackId = this.getRandomTrackSrc(this.currentStation);\n        console.info(stationId + '/' + trackId);\n        return this.player.loadVideoById(trackId, 0, this.prefferableQuality);\n    },\n    pleasePlay: function() {\n        var self = this;\n        self.player.playVideo();\n    }\n};\n\nvar tuningController = {\n    tuningNode: document.querySelector('#tuning'),\n    play: function() {\n        this.tuningNode.play();\n    },\n    pause: function() {\n        this.tuningNode.pause();\n    }\n};\n\nvar stationsList;\n\nfunction onYouTubeIframeAPIReady() {\n    // model.getData.then(function(result){\n        // stationsList = result.stations;\n        stationsList = tracklist.stations;\n        view.init(stationsList);\n        controller.init();\n\n        playerController.init();\n    // });\n};\n","function PositionHelper()\n{\n\n}\n\nPositionHelper.prototype.init = function() {\n    var stationsNodes = document.querySelectorAll('.station');\n    var stationsQuantity = stationsNodes.length;\n    var degree = 0;\n    var spanNode;\n\n    Array.prototype.forEach.call(stationsNodes, function(el, i) {\n        degree += 360 / stationsQuantity;\n        spanNode = el.querySelector('span');\n\n        el.style.transform = 'rotate(-' + degree + 'deg)';\n\n        spanNode.style.transform = 'rotate(' + degree + 'deg)';\n        // spanNode.style.background = 'rgb(90, 10, ' + i + '0)';\n        spanNode.style.backgroundImage = 'url(\"./station-logos/' + el.querySelector('span').innerText + '.jpg\")';\n    });\n}","export function randomizer() {\n    let nos = [1, 2, 3, 4, 5, 6];\n    console.log(nos);\n}"]}